{"version":3,"sources":["DataDisplay.js","CityData.js","App.js","index.js"],"names":["aqiThresholds","mugStart","aqiIndex","aqi","findIndex","threshold","DataDisplay","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","status","color","data","_this2","fetch","city","then","response","json","Error","console","log","mug","i","Math","round","aqiToMug","iaqi","pm25","v","setState","aqicat","aqi25","aqi10","pm10","localTime","Date","time","s","universalTime","tz","catch","error","react_default","a","createElement","toLocaleTimeString","className","React","Component","CityData","src_DataDisplay","App","id","src_CityData","ReactDOM","render","src_App","document","getElementById"],"mappings":"oMAGMA,EAAgB,CAAC,EAAG,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,KACjDC,EAAW,CAAC,EAAG,KAAM,KAAM,KAAM,MAAO,MAAO,MAAO,OAE5D,SAASC,EAASC,GAChB,OAAOH,EAAcI,UAAU,SAAAC,GAAS,OAAIF,EAAME,QA+DrCC,cA7Cb,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACjBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KACDQ,MAAQ,CACXC,OAAQ,qBACRC,MAAO,QACPC,KAAM,MALSV,mFASC,IAAAW,EAAAR,KAClBS,MAAM,6BAA+BT,KAAKJ,MAAMc,KAAO,oDACpDC,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAAAE,GACJ,GAAoB,OAAhBA,EAAKR,OAaP,MAAM,IAAIS,MAbc,IAChBP,EAASM,EAATN,KACRQ,QAAQC,IAAIT,GACZ,IAAMU,EA/BhB,SAAkBzB,GAChB,IAAM0B,EAAI3B,EAASC,GACbyB,EAAM3B,EAAS4B,EAAE,IAAM1B,EAAMH,EAAc6B,EAAE,KAAO5B,EAAS4B,GAAG,GAAI5B,EAAS4B,EAAE,KAAO7B,EAAc6B,GAAK7B,EAAc6B,EAAE,IAC/H,OAAQC,KAAKC,MAAU,GAAJH,GAAQ,GA4BPI,CAASd,EAAKe,KAAKC,KAAKC,GACpChB,EAAKiB,SAAS,CAAElB,KAAM,CACpBU,IAAKA,EACLS,OAAQnC,EAASgB,EAAKe,KAAKC,KAAKC,GAChCG,MAAOpB,EAAKe,KAAKC,KAAKC,EACtBI,MAAOrB,EAAKe,KAAKO,KAAKL,EACtBM,UAAW,IAAIC,KAAKxB,EAAKyB,KAAKC,GAC9BC,cAAe,IAAIH,KAAKxB,EAAKyB,KAAKC,EAAI1B,EAAKyB,KAAKG,SAKnDC,MAAM,SAAAC,GAAK,OAAI7B,EAAKiB,SAAS,CAAEpB,OAAQ,2DAGrC,IACCE,EAASP,KAAKI,MAAdG,KACR,OAAIA,EACO+B,EAAAC,EAAAC,cAAA,WACNjC,EAAKuB,UAAUW,qBADT,cACyCH,EAAAC,EAAAC,cAAA,WAC/CjC,EAAKU,IAFC,YAESqB,EAAAC,EAAAC,cAAA,WAFT,QAGFF,EAAAC,EAAAC,cAAA,QAAME,UAAW,MAAQnC,EAAKmB,QAASnB,EAAKoB,QAG5C3B,KAAKI,MAAMC,cAzCEsC,IAAMC,WCNjBC,mLAbX,OACEP,EAAAC,EAAAC,cAAA,OAAKE,UAAU,YACbJ,EAAAC,EAAAC,cAAA,cACGxC,KAAKJ,MAAMc,MAEd4B,EAAAC,EAAAC,cAAA,eACEF,EAAAC,EAAAC,cAACM,EAAD,CAAapC,KAAMV,KAAKJ,MAAMc,gBARjBiC,IAAMC,WCWdG,MAVf,WACE,OACET,EAAAC,EAAAC,cAAA,OAAKQ,GAAG,WACNV,EAAAC,EAAAC,cAACS,EAAD,CAAUvC,KAAK,WACf4B,EAAAC,EAAAC,cAACS,EAAD,CAAUvC,KAAK,YACf4B,EAAAC,EAAAC,cAACS,EAAD,CAAUvC,KAAK,aCJrBwC,IAASC,OAAOb,EAAAC,EAAAC,cAACY,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.e9226a2c.chunk.js","sourcesContent":["import React from 'react';\n\n// http://aqicn.org/faq/2013-09-09/revised-pm25-aqi-breakpoints/\nconst aqiThresholds = [0, 51, 101, 151, 201, 301, 401, 501];\nconst mugStart = [0, 12.1, 35.5, 55.6, 150.5, 250.5, 350.5, 500.1];\n\nfunction aqiIndex(aqi) {\n  return aqiThresholds.findIndex(threshold => aqi < threshold);\n}\n\nfunction aqiToMug(aqi) {\n  const i = aqiIndex(aqi);\n  const mug = mugStart[i-1] + (aqi - aqiThresholds[i-1]) * (mugStart[i]-0.1-mugStart[i-1]) / (aqiThresholds[i] - aqiThresholds[i-1]);\n  return (Math.round(mug*10)/10);\n}\n\n// function mugToAqi(mug) {\n// }\n\n// const CmugStart = [0, 35.1, 75.1, 115.1, 150.1, 250.1, 350.1, 500.1];\n\n// function mugToCAqi(mug) {\n// }\n\nclass DataDisplay extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      status: 'retrieving data...',\n      color: 'white',\n      data: null\n    }\n  }\n\n  componentDidMount() {\n    fetch('http://api.waqi.info/feed/' + this.props.city + '/?token=7ef04af09a2a93a67569a5c774a03c617e99103e')\n      .then(response => response.json())\n      .then(json => {\n        if (json.status === 'ok') {\n          const { data } = json;\n          console.log(data);\n          const mug = aqiToMug(data.iaqi.pm25.v);\n          this.setState({ data: {\n            mug: mug,\n            aqicat: aqiIndex(data.iaqi.pm25.v),\n            aqi25: data.iaqi.pm25.v,\n            aqi10: data.iaqi.pm10.v,\n            localTime: new Date(data.time.s),\n            universalTime: new Date(data.time.s + data.time.tz),\n          }});\n        } else {\n          throw new Error();\n        }\n      }).catch(error => this.setState({ status: 'failed to load data' }));\n  }\n\n  render() {\n    const { data } = this.state;\n    if (data) {\n      return ( <div>\n        {data.localTime.toLocaleTimeString()} local time<br />\n        {data.mug} Âµg/m3<br />\n        AQI: <span className={\"aqi\" + data.aqicat}>{data.aqi25}</span>\n      </div>);\n    } else {\n      return this.state.status;\n    }\n  }\n}\n\nexport default DataDisplay;\n","import React from 'react';\nimport DataDisplay from './DataDisplay.js';\n\nclass CityData extends React.Component {\n  render() {\n    return (\n      <div className=\"CityData\">\n        <header>\n          {this.props.city}\n        </header>\n        <content>\n          <DataDisplay city={this.props.city} />\n        </content>\n      </div>\n    );\n  }\n}\n\nexport default CityData;\n","import React from 'react';\nimport './App.css';\nimport CityData from './CityData.js';\n\nfunction App() {\n  return (\n    <div id=\"content\">\n      <CityData city=\"Vienna\" />\n      <CityData city=\"Kunming\" />\n      <CityData city=\"London\" />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n//import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n//serviceWorker.unregister();\n"],"sourceRoot":""}